{"componentChunkName":"component---src-templates-docs-js","path":"/linux","result":{"data":{"site":{"siteMetadata":{"title":"Devkurultay","docsLocation":"https://github.com/devkurultay/devkurultay.github.io/tree/master/content"}},"mdx":{"fields":{"id":"a0140435-91b7-58b3-90dc-0b9aa5d97016","title":"Linux/Unix","slug":"/linux"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Linux/Unix\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Linux/Unix\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/linux/001_openssh\"\n  }, \"OpenSSH\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/linux/002_icmp\"\n  }, \"ICMP\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#linuxunix","title":"Linux/Unix"}]},"parent":{"relativePath":"linux.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/chats","title":"Telegram/Discord каналдар"}}},{"node":{"fields":{"slug":"/","title":"Башкы бет"}}},{"node":{"fields":{"slug":"/linux/001_openssh","title":"OpenSSH"}}},{"node":{"fields":{"slug":"/linux/002_icmp","title":"ICMP протоколунун куралдары"}}},{"node":{"fields":{"slug":"/linux","title":"Linux/Unix"}}},{"node":{"fields":{"slug":"/youtube","title":"Ютуб каналдар"}}}]}},"pageContext":{"id":"a0140435-91b7-58b3-90dc-0b9aa5d97016"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}